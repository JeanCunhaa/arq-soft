# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Customer {
    email: String
    name: String
    id: ID!
}



type Mutation {
    " Create a new product in the system."
    createProduct(input: ProductInput): Product
    " Delete a product in the system."
    deleteProduct(id: Int): Boolean
    " Update an existing product in the system."
    updateProduct(input: ProductInput): Product

    " Create a new Customer in the system."
    createCustomer(input: CustomerInput): Customer
    " Delete a Customer in the system."
    deleteCustomer(id: Int): Boolean
    " Update an existing Customer in the system."
    updateCustomer(input: CustomerInput): Customer

    createOrder(input: OrderInput): Order

    deleteOrder(input: OrderInput): Order
}

type Order {
    customer: Customer
    id: ID!
    product: Product
    qty: Int
}

" Objects"
type Product {
    desc: String
    id: ID!
    title: String
    price: Float
}

" Root Operations"
type Query {
    " List all customers in the system."
    allCustomers: [Customer]
    " List all orders in the system."
    allOrders: [Order]
    " List all products in the system."
    allProducts: [Product]
    " Find a customer by their id."
    findCustomerById(id: ID): Customer
    " Find an order by order id."
    getOrder(id: ID): Order
    " Get a single product by the product id."
    getProduct(id: ID): Product


}



"An RFC-3339 compliant Full Date Scalar"
scalar Date

"A slightly refined version of RFC-3339 compliant DateTime Scalar"
scalar DateTime

" Inputs"
input ProductInput {
    desc: String
    id: Int
    title: String
    price: Float
}

input CustomerInput {
    email: String
    id: Int
    name: String
}

input OrderInput{
    idOrder: Int
    idCustomer: Int
    idProduct: Int
    qty: Int
}
